name: Deploy

on:
  push:
    branches: [production]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create Evolution Container
        run: |
          docker run -d \
            --name evolution-api \
            -p 8080:8080 \
            -e AUTHENTICATION_API_KEY=${{ secrets.EVOLUTION_SECRET }} \
            -v evolution_store:/evolution/store \
            -v evolution_instances:/evolution/instances \
            atendai/evolution-api

      - name: Install Nginx
        run: |
          sudo apt-get update
          sudo apt-get install -y nginx
          sudo systemctl start nginx

      - name: Obtain SSL Certificate
        run: |
          sudo apt-get install -y certbot python3-certbot-nginx
          sudo certbot --nginx -d api.marinabot.com.br --non-interactive --agree-tos --email hi@wladi.com.br

      - name: Configure Nginx
        run: |
          sudo bash -c 'cat > /etc/nginx/sites-available/api.marinabot.com.br <<EOF
          server {
              listen 80;
              server_name api.marinabot.com.br;
              return 301 https://\$host\$request_uri;
          }

          server {
              listen 443 ssl;
              server_name api.marinabot.com.br;

              ssl_certificate /etc/letsencrypt/live/api.marinabot.com.br/fullchain.pem;
              ssl_certificate_key /etc/letsencrypt/live/api.marinabot.com.br/privkey.pem;

              location / {
                  proxy_pass http://localhost:8080;
                  proxy_set_header Host \$host;
                  proxy_set_header X-Real-IP \$remote_addr;
                  proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto \$scheme;
              }
          }
          EOF'
          sudo ln -s /etc/nginx/sites-available/yourdomain.com /etc/nginx/sites-enabled/
          sudo nginx -t
          sudo systemctl restart nginx

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          tools: composer:v2
          coverage: none

      - name: Require Vapor CLI
        run: composer global require laravel/vapor-cli

      - name: Install Project Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Set Vapor Team
        run: vapor team:switch --id=${{ env.VAPOR_API_TEAM}}
        env:
          VAPOR_API_TEAM: ${{ secrets.VAPOR_TEAM_ID }}
          VAPOR_API_TOKEN: ${{ secrets.VAPOR_API_TOKEN }}

      - name: Check Docker Logs
        run: docker logs evolution-api
